// UGC Feature Flags Configuration - PRODUCTION
// This file contains production-ready feature flag settings
// Auto-generated by gate-ugc-flags.sh

export const UGC_FEATURE_FLAGS_PRODUCTION = {
  // Social listening and discovery
  'ugc.social-listening': {
    enabled: true,
    description: 'Enable social listening and UGC discovery from multiple platforms',
    group: 'ugc',
    environment: 'production',
    rollout_percentage: 100,
    created_at: new Date().toISOString(),
    promoted_at: new Date().toISOString()
  },
  
  // Auto-editing capabilities
  'ugc.auto-editing': {
    enabled: true,
    description: 'Enable AI-powered automatic editing of UGC content',
    group: 'ugc',
    environment: 'production',
    rollout_percentage: 100,
    created_at: new Date().toISOString(),
    promoted_at: new Date().toISOString()
  },
  
  // Voiceover generation
  'ugc.voiceover-generation': {
    enabled: true,
    description: 'Enable AI voiceover generation for UGC videos',
    group: 'ugc',
    environment: 'production',
    rollout_percentage: 100,
    created_at: new Date().toISOString(),
    promoted_at: new Date().toISOString()
  },
  
  // Hotspot generation
  'ugc.hotspot-generation': {
    enabled: true,
    description: 'Enable interactive hotspot generation for UGC content',
    group: 'ugc',
    environment: 'production',
    rollout_percentage: 100,
    created_at: new Date().toISOString(),
    promoted_at: new Date().toISOString()
  },
  
  // Database integration
  'ugc.database-integration': {
    enabled: true,
    description: 'Enable UGC database storage and management',
    group: 'ugc',
    environment: 'production',
    rollout_percentage: 100,
    created_at: new Date().toISOString(),
    promoted_at: new Date().toISOString()
  },
  
  // Inbox management
  'ugc.inbox-management': {
    enabled: true,
    description: 'Enable UGC inbox for content management',
    group: 'ugc',
    environment: 'production',
    rollout_percentage: 100,
    created_at: new Date().toISOString(),
    promoted_at: new Date().toISOString()
  },
  
  // Auto-edit button
  'ugc.auto-edit-button': {
    enabled: true,
    description: 'Enable auto-edit button in UGC interface',
    group: 'ugc',
    environment: 'production',
    rollout_percentage: 100,
    created_at: new Date().toISOString(),
    promoted_at: new Date().toISOString()
  },
  
  // Voiceover tab
  'ugc.voiceover-tab': {
    enabled: true,
    description: 'Enable voiceover tab in UGC editor',
    group: 'ugc',
    environment: 'production',
    rollout_percentage: 100,
    created_at: new Date().toISOString(),
    promoted_at: new Date().toISOString()
  },
  
  // Hotspot generator
  'ugc.hotspot-generator': {
    enabled: true,
    description: 'Enable hotspot generator tool',
    group: 'ugc',
    environment: 'production',
    rollout_percentage: 100,
    created_at: new Date().toISOString(),
    promoted_at: new Date().toISOString()
  },
  
  // Dashboard
  'ugc.dashboard': {
    enabled: true,
    description: 'Enable UGC dashboard and analytics',
    group: 'ugc',
    environment: 'production',
    rollout_percentage: 100,
    created_at: new Date().toISOString(),
    promoted_at: new Date().toISOString()
  }
} as const;

// Production environment helper functions
export function isUGCFeatureEnabledProduction(feature: keyof typeof UGC_FEATURE_FLAGS_PRODUCTION): boolean {
  return UGC_FEATURE_FLAGS_PRODUCTION[feature]?.enabled ?? false;
}

export function getUGCFeatureDescriptionProduction(feature: keyof typeof UGC_FEATURE_FLAGS_PRODUCTION): string {
  return UGC_FEATURE_FLAGS_PRODUCTION[feature]?.description ?? 'No description available';
}

export function getUGCFeatureRolloutPercentage(feature: keyof typeof UGC_FEATURE_FLAGS_PRODUCTION): number {
  return UGC_FEATURE_FLAGS_PRODUCTION[feature]?.rollout_percentage ?? 0;
}

export function getEnabledUGCFeaturesProduction(): string[] {
  return Object.entries(UGC_FEATURE_FLAGS_PRODUCTION)
    .filter(([_, config]) => config.enabled)
    .map(([feature]) => feature);
}

export function getAllUGCFeaturesProduction(): string[] {
  return Object.keys(UGC_FEATURE_FLAGS_PRODUCTION);
}

// Production deployment metadata
export const UGC_PRODUCTION_METADATA = {
  deployed_at: new Date().toISOString(),
  version: '1.0.0',
  environment: 'production',
  features_count: Object.keys(UGC_FEATURE_FLAGS_PRODUCTION).length,
  enabled_features_count: getEnabledUGCFeaturesProduction().length,
  deployment_notes: 'UGC features promoted to production - all features enabled with 100% rollout'
}; 